---
layout: about
title: Platform Updates - OpenXC
---

<div class="page-header">
    <h1>Platform Updates</h1>
</div>

Starting November 2014, this page tracks the high level capabilities of the
OpenXC platform. Sub-components like the [Android
library](https://github.com/openxc/openxc-android) or [vehicle interface
firmware](https://github.com/openxc/vi-firmware) may have incremental updates
between major platform updates which are tracked in their respective changelogs.

## November 2014

* Vehicle Interface Firmware - [v7.0](https://github.com/openxc/vi-firmware/releases/tag/v7.0.0)
* Python Library - [v0.12.0](https://github.com/openxc/openxc-python/releases/tag/v0.12.0)
* Android Library and Enabler - [v6.0.3](https://github.com/openxc/openxc-android/releases/tag/v6.0.3)
* OpenXC Message Format Specification - [v0.4.0](https://github.com/openxc/openxc-message-format/releases/tag/v0.4.0)

This platform update brings a major refactoring of the message format, so a
simultaneous update of the firmware and client libraries is required. The
vi-firmware project now has a functional test suite to help guard against
regressions in future releases, and it supports a number of new run-time
configuration options.

For example, the VI can be [configured at
runtime](https://github.com/openxc/openxc-message-format/blob/master/JSON.mkd#commands)
to:

* Enable or disable the CAN message acceptance filters.
* Enable or disable passing low-level CAN messages from the car to the connected
  client (i.e. "passthrough mode").
* Change the payload format between JSON and Protocol Buffers
* Enable or disable the built-in set of recurring OBD-II PID requests

The internals of the Android library are significantly refactored to enable
greater flexibility to deal with different types of messages from the vehicle.
The public API for the `VehicleManager`, using in OpenXC Android apps, is
backwards compatible so no significant changes are required for developers
(potentially only no longer needing to catch a certain exception thrown by the
library, as it is now handled internally). For example, [this commit in the
openxc-starter](https://github.com/openxc/openxc-starter/commit/72aae8a529c506384185b41fd90fd753c350b5cc)
project updates it to be compatible with the v6.0 Android library.

The OpenXC Enabler Android app is now available through the Google Play store,
and also has an enhanced user interface to expose many of the new features of
the vehicle interface and library. You can see a preview of the new screens in
this [thread in the Google Group](https://groups.google.com/forum/#!topic/openxc/WSl92Bpt-K8).

### Known Issues

* The VI firmware does not yet support receive commands serialized using the
  protocol buffer format. It only supports outputting data using this format
  (see [#313](https://github.com/openxc/vi-firmware/issues/313)).
* The run-time configuration options for the VI are not persistent - if the V
  is power cycled, it will reset to the compile-time defaults in your firmware
  build (see [#316](https://github.com/openxc/vi-firmware/issues/316)).
