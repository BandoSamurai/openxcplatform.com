---
layout: default
title: Firmware - OpenXC
---

<div class="page-header">
    <h1>Vehicle Interface Firmware</h1>
</div>

<div class="pull-right well">
    <ul class="nav nav-list">
        <li class="nav-header">Next Step</li>
        <li><a href="/vehicle-interface/testing.html">
            Test your vehicle interface <i class="icon-arrow-right"></i>
        </a></li>
    </p>
</div>

<div class="page-header">
    <h2>Programming a Binary Firmware</h2>
</div>

Updates to the vehicle interface (VI) firmware are often distributed as
pre-compiled binaries by car manufacturers that do not want to make their CAN
message details public.

Once you download the binary firmware for your car, you must follow the
instructions for your particular vehicle interface for re-programming. Look for
your VI on the [supported VI hardware page](/vehicle-interface/index.html) to
find the instructions.

**Ford**

Firmware for Ford vehicles is available through the [Ford
Developer](https://developer.ford.com) website for logged-in users.

An up-to-date list of exactly which OpenXC messages are supported by each
vehicle is maintained as a [Google
Spreadsheet](https://docs.google.com/spreadsheet/ccc?key=0Ajz-75u_7nEydFJxUG4yOVZ1NXJlcjNvdzdSTDdyY0E).
The spreadsheet also identifies which of the CAN buses each data element is
available on, so you can make sure to buy or build vehicle interface that
[connects to the right buses](/vehicle-interface#obd-pins).

**Emulator**

A very simple CAN bus [emulator
firmware](http://openxcplatform.com.s3.amazonaws.com/openxc-canemulator-firmware.zip)
is available to test the connectivity of your vehicle interface with a computer
or tablet. It generates fake vehicle data and continuously sends it over USB as
if it were live data.

<div class="page-header">
    <h2>Custom CAN Signal Definition</h2>
</div>

Developers that know the details of the CAN bus they will be using can choose to
implement their own signal definitions for the translator. The process is
described in the [building from source
documentation](http://vi-firmware.openxcplatform.com/en/latest/installation/installation.html).

<div class="page-header">
<h2>Next Steps</h2>
</div>

You're now ready to [test your VI in a vehicle][testing].

[winavr]: http://winavr.sourceforge.net/
[upload_hex.sh]: https://github.com/openxc/vi-firmware/blob/master/script/upload_hex.sh
[vi-firmware]: https://github.com/openxc/vi-firmware
[MPIDE]: https://github.com/chipKIT32/chipKIT32-MAX/downloads
[testing]: /vehicle-interface/testing.html
[Cygwin]: http://www.cygwin.com/
