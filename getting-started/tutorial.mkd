---
layout: default
---

Tutorial
=============

## Installation

This tutorial assumes you have a working knowledge of how to create an Android
application. Setting up the development environment and understanding Android
fundamentals is outside the scope of OpenXC, and already Google provides great
documentation and tutorials - we won't repeat them here. The best place to start
is the [SDK installation guide][sdk].

Once you're comfortable with the Hello World Android app, download the OpenXC
[library project][] and add it to your development environment.

Interacting with OpenXC in your application is quite simple once installed - it
requires an Android service connection and defining a callback for vehicle
measurement updates. The [usage details][] explain how to listen for vehicle
speed in your Hello World app - try updating the `TextView`'s value with vehicle
speed every time you receive an update.

## Testing

Before you can test your app in a vehicle, you will need to find or build a
functional [vehicle interface][]. Ford is currently providing a limited number
of kits with OpenXC signals defined for the 2012 Ford Focus. Join the project's
[Google Group][gg] to find out how to get one of these.

## Example Application

For an example of a complete OpenXC application, check out the
[Vehicle Dashboard][] app in the [openxc-android][] repository (only available
if logged into GitHub and with access to the early release).

[gg]: http://groups.google.com/group/openxc
[sdk]: http://developer.android.com/sdk/installing.html
[vehicle interface]: http://openxcplatform.com/vehicle-interface/hardware
[library project]: http://openxcplatform.com/android/library-installation
[usage details]: http://openxcplatform.com/android/library-usage
[openxc-android]: https://github.com/openxc/openxc-android
[Vehicle Dashboard]: https://github.com/openxc/openxc-android/tree/master/examples
