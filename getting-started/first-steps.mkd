---
layout: default
title: First Steps - OpenXC
---

<div class="page-header">
    <h1>First Steps and a Sanity Check</h1>
</div>

<div class="pull-right well">
    <ul class="nav nav-list">
        <li class="nav-header">Next Step</li>
        <li><a href="/getting-started/library-installation.html">
            Install the Android library <i class="icon-arrow-right"></i>
        </a></li>
    </p>
</div>

So you just bought an OpenXC vehicle interface? Let's get it programmed and
test it in a car with your Android device or laptop.

If you have issues at any point in this process, check for similar issues in the
[Google Group](http://groups.google.com/group/openxc) and otherwise create a new
post to ask for some assistance.

## Requirements

* An [OpenXC-compatible vehicle interface](/vehicle-interface/index.html)
* An [OpenXC-compatible host
  device](/host-devices/index.html) - like an Android
  tablet or a computer with Python

## Program the Vehicle Interface

Visit the [VI firmware page](/vehicle-interface/firmware.html) to find the
right firmware for your VI and to learn how to re-program it.

## Android Smoke Test

<ol>
<li>Install the OpenXC Enabler and Vehicle Dashboard application from the
<a href="https://github.com/openxc/openxc-android/releases">latest release page</a> - the
two green buttons link directly the APK files that can be installed on your
Android device.

</li>

<li>Plug in your vehicle interface to a USB connector or a vehicle, so that it powers up.</li>

<li>On your Android phone or tablet, go to <code>Settings -> Bluetooth</code> and click
<code>Search for Devices</code>. Look for a device named something similar to
<code>OpenXC-VI-XXXX</code> - select it to pair and use the password <code>1234</code>
(<a class="extra-screenshots" href="#extra-settings-screenshots">show me</a>)

<br/>
<div class="extra-screenshots" id="extra-settings-screenshots">
<img title="OpenXC Enabler App" src="/images/test-screenshots/android-settings.png"/>
<img title="OpenXC Enabler App" src="/images/test-screenshots/android-settings-bluetooth.png"/>
<img title="OpenXC Enabler App" src="/images/test-screenshots/android-settings-bluetooth-pairing.png"/>
<img title="OpenXC Enabler App" src="/images/test-screenshots/android-settings-bluetooth-paired.png"/>
</div>

</li>

<li>Run the OpenXC Enabler app, go to <code>Settings -> Data Sources</code> and check "Use
a Bluetooth Vehicle Interface", then click on "Bluetooth Device" and select the
<code>OpenXC-VI-XXXX</code> device you just paired.
(<a class="extra-screenshots" href="#extra-enabler-screenshots">show me</a>)

<div class="extra-screenshots" id="extra-enabler-screenshots">
<img title="OpenXC Enabler App" src="/images/test-screenshots/android-enabler.png"/>
<img title="OpenXC Enabler App" src="/images/test-screenshots/android-enabler-settings.png"/>
<img title="OpenXC Enabler App" src="/images/test-screenshots/android-enabler-settings-bluetooth.png"/>
<img title="OpenXC Enabler App" src="/images/test-screenshots/android-enabler-settings-bluetooth-device.png"/>
<img title="OpenXC Enabler App" src="/images/test-screenshots/android-enabler-settings-bluetooth-device-selected.png"/>
<img title="OpenXC Enabler App" src="/images/test-screenshots/android-enabler-settings-bluetooth-device-selected-selected.png"/>
</div>

</li>

<li>Return to the Enabler's main screen (hit the back button twice), and you
will now see a <code>BluetoothVehicleInterface</code> in the "Data Sources" list. If your
VI is plugged into a running vehicle, after a few seconds it will open a
connection and start receiving vehicle data.
<br/>
(<a class="extra-screenshots" href="#extra-active-enabler-screenshots">show me</a>)

<div class="extra-screenshots" id="extra-active-enabler-screenshots">
<img title="OpenXC Enabler App" src="/images/test-screenshots/android-enabler-active-bluetooth.png"/>
</div>
</li>

<li>Open the Vehicle Dashboard app, which will now be displaying live data from
the car (you can also look at <a
href="https://github.com/openxc/openxc-android/tree/master/examples">the
code</a> for that app).
<br/>
<img title="OpenXC Enabler App" src="/images/test-screenshots/android-dashboard.png"/>
</li>
</ol>

## Python Smoke Test

If you don't have an Android device, or you want to write apps using Python, you
can use a laptop to test.

1. Install the [Python library](http://python.openxcplatform.com/#installation) -
  don't forget the [USB backend!](http://python.openxcplatform.com/en/latest/#usb).
1. Attach the programmed VI to your computer with a USB cable, or pair with it
   via Bluetooth and open a serial terminal (the Bluetooth pairing process
   depends on your platform, so we leave that as an exercise for the user). On
   Windows, install the driver from the [vi-firmware
   repository](https://github.com/openxc/vi-firmware/tree/master/conf/windows-driver).
1. Run `openxc-control version` from the command line - it should print out the
   current version of the attached vehicle interface. If you instead get an
   error about not being able to find the USB device, make sure the VI has
   power (look for an LED).
   1. Did you get an error that there is `no backend available`? Go back to the
      Python library docs and make sure you [installed a USB
      backend](http://python.openxcplatform.com/#usb).
1. If the version check was successful, plug your VI into a running car and run
   `openxc-dump` to test that data can be streamed from the vehicle interface.
   It should return a stream of live vehicle data, and `openxc-dashboard` will
   show the vehicle parameters in a useful windowed display.

<div class="page-header">
<h2>Next Steps</h2>
</div>

When you're ready to begin writing an OpenXC app, continue on to
[install the Android library](/getting-started/library-installation.html). You
can get started even if you don't have a hardware vehicle interface (or even a
car!).

If you're interested in creating a web application instead and want to leave the
in-vehicle details to someone else, jump to the [vehicle data
format](/vehicle-interface/output-format.html) section to know what type of data
your app needs to accept.
