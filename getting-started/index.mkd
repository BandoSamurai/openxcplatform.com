---
layout: default
title: Getting Started - OpenXC
---

<div class="page-header">
    <h1>Getting Started</h1>
</div>

<div class="pull-right well">
    <ul class="nav nav-list">
        <li class="nav-header">Next Step</li>
        <li><a href="/getting-started/library-installation.html">
            Install the Android library <i class="icon-arrow-right"></i>
        </a></li>
    </p>
</div>

Modern automobiles are laced with a number of microcontrollers and sensors that
monitor and control everything from the throttle postion to the ambient air
temperature. These devices communicate with each other over a wired in-vehicle
network, a [CAN bus][can].

![In-vehicle Network](/images/can-diagram.png)

The CAN bus is one of the primary components of [OBD-II][obd2], a vehicle
diagnostic standard mandatory for all cars sold in the United States since 1996.
The OBD-II standard sends and receives messages on the CAN bus. If you've ever
watched your mechanic plug a tool in somewhere underneath your steering wheel,
or seen a vehicle monitoring app for your smartphone, that's OBD-II in action.
You'll always find the port by the driver's knees.

![OBD-II Port with Cable in a Mustang](/images/obd-ii-cable.jpg)

This means that every vehicle in the United States has a very accessible place
to connect to the same network used by all of the vehicle's subsystems. That's
where OpenXC comes in - with some knowledge of how to process the messages on
the network, you can start to get valuable data out of your car.

The OpenXC architecture is divided into **two parts**:

![Boxed CAN Translator](/images/cantranslator-boxed.jpg)

The <a href="/vehicle-interface/index.html">**CAN translator**</a> (or CAN
reader) is a device that plugs into the OBD-II port (and thus to the CAN bus),
reads and translates CAN messages into a [standard cross-vehicle
format](/vehicle-interface/output-format.html). The translated messages can be
sent over USB or Bluetooth, so they can be read by any computer or mobile
mobile.

<div class="row">
    <div class="span4">
        <img src="/images/android-in-car.jpg"/>
    </div>
    <div class="span4 stacked">
        <img src="/images/screenshots/mpg-app-1.png"/>
        <img src="/images/screenshots/mpg-app-2.png"/>
    </div>
</div>


The <a href="/android/index.html">**Android host device**</a> connects to the
CAN translator and reads the translated vehicle data. OpenXC developers can
write applications on this device and use any of the data through a Java
library.

![OpenXC Architecture Diagram](/images/openxc-architecture.jpeg)

[can]: http://en.wikipedia.org/wiki/CAN_bus
[obd2]: http://en.wikipedia.org/wiki/On-board_diagnostics

<div class="page-header">
<h2>Next Steps</h2>
</div>

When you're ready to begin writing an OpenXC app, continue on to
[install the Android library](/android/library-installation.html). You can get
started even if you don't have a hardware vehicle interface (or even a car!).
