---
layout: contributors
title: How To Contribute
---

<div class="page-header">
    <h1>How to Contribute</h1>
</div> 

Contributions are welcome - we want to keep it as easy as possible to contribute changes that get things working in your environment. There are a few guidelines that we need contributors to follow so that we can have a chance of keeping on top of things.

### Report Issues
1. Make sure your have a [GitHub account](https://github.com/join)
2. Check for existing issues in the [OpenXC Repository](http://github.com/openxc/) corresponding to your issue.
3. If an issue does not already exist, create a new issue.
   * Clearly describe the issue including steps to reproduce, if the issue is a bug. 
   * Make sure you include the virsion that is affected by the issue. 

### Making Changes
1. If you haven't already, create a new issue on GitHub for your bug fix or new feature. 
2. Fork the repository in which you would like to make changes.
   * List of OpenXC Repositories: [OpenXC Repositories](http://github.com/openxc).
   * How to fork a GitHub Repository: [GitHub - Forking](https://help.github.com/articles/fork-a-repo#step-1-fork-the-spoon-knife-repository).
3. Make a local clone of your newly forked repository.
   * How to clone a fork: [GitHub - Clone your fork](https://help.github.com/articles/fork-a-repo#step-2-clone-your-fork).
4. Create a new branch related to the issue on which you are working.
   * Avoid working on the ```master``` branch.
   * How to create a branch: [GitRef - Branching](http://gitref.org/branching/#branch)
5. Make changes using the IDE of your choice.
6. Commit your changes frequently, in logical units.
   * Check for unnecessary whitespace with ```git diff --check``` before committing
   * Make sure your commit messages are in the [proper format](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html). 
   * Make sure you have tested your changes and added any necessary tests.
   * How to add changes to your local repository: [GitRef - Add](http://gitref.org/basic/#add).
   * How to commit changes to your local repository: [GitRef - Commit](http://gitref.org/basic/#commit). 

### Submitting Changes
1. Push the changes in your branch to your GitHub fork.
   * How to push your local branch: [GitHub - Pushing a branch](https://help.github.com/articles/pushing-to-a-remote#pushing-a-branch).
2. Sign the [Contributor License Agreement](http://openxcplatform.com/contributor-license-agreement.html) (CLA)
3. Submit a pull request to the repository in the openxc organization. 
   * How to request a pull: [GitHub - Initiating the Pull Request](https://help.github.com/articles/using-pull-requests#initiating-the-pull-request)



## Contributing Tips & Tricks

### Git and GitHub Tutorials
If you are new to Git and/or GitHub, it is recommended you review the following resources, put together by the experts at GitHub. 

* [Git Reference](http://gitref.org)
* [GitHub Help](https://github.com/openxc/vi-firmware#openxc-vehicle-interface-firmware)

### Use the GitHub Issue Tracking System
Prior to making a change, use the [GitHub Issues](https://github.com/features/projects/issues) for the repository for which you would like to make changes. This opens intended changes up for internal discussion with other contributors which leads to better overall solutions. 

Create new issues for changes you would like to make. 

Contribute to existing issues as a way to start developing within the repository.

### Make use of GitHub Mentions and References
To keep comments, issues, and pull requests organized, use [GitHub Mentions](https://help.github.com/articles/github-flavored-markdown#name-and-team-mentions-autocomplete) and [GitHub References](https://help.github.com/articles/github-flavored-markdown#references). 

Using the @```user_name``` mention notifies the user with username, ```user_name```, that they have been "mentioned".

Using the #```issue_number``` reference in other issues and pull requests allows users to notify each other that those issues and pull requests are related.

### Read the Repo's README Section
Each [OpenXC Repository](http://github.com/openxc/) has a detailed README section with details helpful to perspective contributors. Read the README section of any repository to which you plan to contribute. Examples of these README sections:

* [openxcplatform.com Repo's README](https://github.com/openxc/openxcplatform.com#openxcplatformcom)
* [openxc-android Repo's README](https://github.com/openxc/openxc-android#openxc-android-library)
* [vi-firmware Repo's README](https://github.com/openxc/vi-firmware#openxc-vehicle-interface-firmware)
* Each [OpenXC Repository](http://github.com/openxc/) contains a README section.

