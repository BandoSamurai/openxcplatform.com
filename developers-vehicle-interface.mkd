---
layout: default
permalink: /developers/vehicle-interface/hardware.html
---

CAN Translator Module
=============

The CAN translation module is a microcontroller with two connections - one to
the CAN bus via the OBD-II port, and one to the [host device][] via USB. It
listens for a subset of CAN messages, performs required unit conversion or
factoring and outputs a [generic version][translation-specs] to the USB
interface.

## Hardware

The current implementation uses the [Digilent chipKIT Max32][chipkit], an
[Arduino-compatible][arduino] microcontroller based on PIC32 instead of ATmega. The network
shield add-on gives the chipKIT two CAN transceivers, which is enough to enable
most OpenXC applications.

The translator is currently powered via its micro-USB board, which is connected
to the host device. CAN messages are received via the OBD-II port in the
driver's footwell.

## Software

The [cantranslator][] repository contains the C source code that runs on the
Arduino-compatible chipKIT device. Most OpenXC users won't need to touch this
component - they will most likely be using a pre-built binary on the vehicle
interface that knows about proprietary vehicle signals.

### Updating from a .hex file

Updates to the translator source may be distributed as pre-compiled binaries,
e.g. if they are distributed by an OEM who does not wish to make the CAN signals
public.

In that case, you will have a .hex file and can use the `upload_hex.sh` script
in the [cantranslator][] repository to update your device.

    $ ./upload_hex new-version.hex

This script requires that [MPIDE][] is installed, and the environment variable
`ARDUINO_DIR` points to the MPIDE directory.

You also need the chipKIT network shield libraries (provided by Microchip).
Download these from the bottom of the [Max32 page][] and extract them to your
MPIDE sketchbook directory in a subdirectory named `libraries`. It should look
like this:

    - /Users/me/sketchbook/
    ---- libraries/
    -------- chipKITUSBDevice/
            ... other libraries

### Custom CAN Signal Definition

Developers that know the details of the CAN bus they will be using can choose to
implement their own signal definitions for the translator. The documentation for
this process is available at the [cantranslator][] repository.

[MPIDE]: https://github.com/chipKIT32/chipKIT32-MAX/downloads
[Max32 page]: http://digilentinc.com/Products/Detail.cfm?NavPath=2,719,895&Prod=CHIPKIT-MAX32.
[cantranslator]: https://github.com/openxc/cantranslator
[translation-specs]: /developers/vehicle-interface/translation-specs.html
[host device]: /developers/android/host.html
[chipkit]: http://www.digilentinc.com/Products/Catalog.cfm?NavPath=2,892&Cat=18
[arduino]: http://arduino.cc
