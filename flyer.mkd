---
layout: slim
title: OpenXC
---

# The OpenXC Platform

*openxcplatform.com*

OpenXC is combination of open source hardware and software that lets you extend
your vehicle with custom applications, sensors and actuators. It uses standard,
well-known tools to open up a wealth of data from the vehicle to developers.

### Participating Members

**Ford** is one of the founding members of the OpenXC open source project. **Bug
Labs** is also a founding member, and contributed to a demo of a prototype
OpenXC system at the TechCrunch Disrupt conference in San Francisco in September
2011.

### Technical Overview

The OpenXC architecture is divided into **two parts**:

<img src="/images/cantranslator-boxed-smaller.jpg"/>

The <a href="/vehicle-interface/index.html">**CAN translator**</a> (or CAN
reader) is a device that plugs into the OBD-II port and reads and translates CAN
messages into a [standard cross-vehicle
format](/vehicle-interface/output-format.html). The translated messages can be
sent over USB or Bluetooth, so they can be read by any computer or mobile
mobile.

The module is a microcontroller with two connections - one to the CAN bus via
the OBD-II port, and one to an Android device via USB or Bluetooth. It listens
for a subset of CAN messages, performs required unit conversion or factoring and
outputs a generic version to the USB interface as JSON.

<img src="/images/screenshots/mpg-app-1.png"/>
<img src="/images/screenshots/mpg-app-2.png"/>

The <a href="/android/index.html">**Android host device**</a> connects to the
CAN translator and reads the vehicle data. OpenXC developers can write
applications on this device and use any of the data through a Java library.

### Supported Vehicles

**Ford**

* 2011 - 2013 Focus (gas and electric)
* 2011 - 2012 Fusion (gas and hybrid)
* 2011 - 2012 Fiesta
* 2012 Mustang
* 2011 Figo
* 2009 F-150
* 2011 - 2012 E350
* 2008 S-MAX

Most other Ford vehicles from the past 3-4 years can also be supported, but are
currently untested.

**Signal List**

This is the list of signals officially supported by the Android library. Be
aware that vehicles do not necessarily support all of these signals.

There are potentially many more signals available on the CAN bus, but we've
selected a small set of the most interesting signals to get started.

<dl>
    <dt>torque_at_transmission</dt>
    <dd>-500 to 1500 Nm</dd>

    <dt>engine_speed<dt>
    <dd>0 to 16382 RPM</dd>

    <dt>vehicle_speed</dt>
    <dd>0 to 655 km/h</dd>

    <dt>accelerator_pedal_position</dt>
    <dd>0 to 100%</dd>

    <dt>brake_pedal_status</dt>
    <dd>Boolean (True == pedal pressed)</dd>

    <dt>transmission_gear_position</dt>
    <dd>States: first, second, third, fourth, fifth, sixth, seventh, eighth,
            reverse, neutral</dd>

    <dt>odometer</dt>
    <dd>0 to 16777214 km</dd>

    <dt>fine_odometer_since_restart</dt>
    <dd>0 to 4294967295.0 km (this has a much higher resolution than the
        odometer, but it restarts back to zero every time the vehicle starts,
        but it restarts back to zero every time the vehicle starts)</dd>

    <dt>fuel_consumed_since_restart</dt>
    <dd>0 - 4294967295.0 L (this goes to 0 every time the vehicle restarts)</dd>

    <dt>latitude</dt>
    <dd>-89.0 to 89.0 degrees</dd>

    <dt>longitude</dt>
    <dd>-179.0 to 179.0 degrees</dd>
</dl>

## Contact

For more information on OpenXC, visit the project's web page at
http://openxcplatform.com or contact Chris Peplin at cpeplin@ford.com.
