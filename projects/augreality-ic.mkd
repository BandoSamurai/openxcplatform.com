---
layout: default
title: Augmented Reality Instrument Cluster - OpenXC
---

<div class="page-header">
    <h1>Augmented Reality Instrument Cluster</h1>
</div>

**GitHub Directory:** [Augmented Reality Instrument Cluster (Insert Here)][]

The Augmented Reality Instrument Cluster (ARIC) is a research project exploring the use of Android tablets as replacements or supplements for vehicle instrument clusters. The project uses OpenXC and an Android tablet with external USB webcam to create an instrument panel with augmented reality navigation. ARIC consists of three main components: a live video feed of the road generated by the external webcam, the vehicle gauges driven by the OpenXC platform, and augmented reality navigation using a combination of native android sensors and services. The project was originally designed and developed by [Colin Mayer](http://colinmayer.com) during his summer internship at [Ford Silicon Valley Lab](http://fordsvl.com). 

![Augmented Reality Instrument Cluster ](/projects/images/ARIC/ARIC_IN_DASH.png)

<div class="page-header">
    <h2>Motivation</h2>
</div>

It is well documented that driver distraction contributes to unsafe driving. A [2008 NHTSA study](http://www-nrd.nhtsa.dot.gov/Pubs/811059.PDF) found in-vehicle driver distraction to be a critical reason for 11% of crashes. Internal distractions include actions that require the driver to divert his attention from the road, such as using a navigation system or looking at the instrument cluster. An augmented reality instrument cluster allows drivers to maintain a view of the road while gaining instrument or navigation information.

<div class="page-header">
    <h2>Software Implementation</h2>
</div>

The ARIC consists of three main components a live video feed of the road generated by the external webcam, the vehicle gauges driven by the OpenXC platform, and augmented reality navigation using a combination of native android sensors services. 

The live "reality" background is created by binding an external USB webcam to the base surface view. ARIC uses the OpenXC Android webcam library to interface with the external webcam. The library is compatible with any UVC enable USB webcam. 

All rendering on top of the surface view is handled by the Andengine OpenGL engine. Andengine is a 2D OpenGL gaming engine developed for Android. OpenGL is the preferred renderer for Android, providing higher performance than Android's Canvas renderer. On-screen gauges for speed, fuel level and engine speed (tachometer) are driven by OpenXC. 

![OpenXC Instrument Gauges](/projects/images/ARIC/ARIC_INSTRUMENTS.png)

Augmented Reality navigation is handled by a collection of sensors and services. Location services are provided through the Google Play Services API. Orientation for Augmented Reality is user specified to use either the magnetic field and accelerometer sensors or the software orientation sensor. Performance for each sensor configuration varies by device. The application includes a primitive navigation feature that prompts the user for a hands-free voice input of a destination, then calculates the route using the Google Directions API. 

![Augmented Reality Navigation](/projects/images/ARIC/ARIC_NAVPROMPT.png)

Routes are processed into a series of Augmented Reality targets that are displayed in order on the screen. Interactive features such as navigation and application settings are only available when the vehicle is stopped.

![Augmented Reality Target](/projects/images/ARIC/ARIC_AR.png)

<div class="page-header">
    <h2>Requirements</h2>
</div>

**Hardware**

* OpenXC-compatible [Android Device](/android/index.html) (3.2 or later) that can [access UVC video devices](#android-usb-webcam).
* [USB Webcam](http://www.logitech.com/en-us/webcam-communications/webcams) supporting UVC and a 640x480 resolution in the YUYV format.
* [OpenXC Vehicle Interface](https://openxcplatform.com/vehicle-interface/index.html) (VI) with vehicle-specific firmware
* [OpenXC-supported vehicle](http://openxcplatform.com/vehicle-interface/output-format.html)
* USB hub (if you will be using the VI over USB in addition to the camera)

**Software**

* [OpenXC Android Library](http://openxcplatform.com/getting-started/library-installation.html)
* [Android SDK](http://developer.android.com/sdk/index.html)
* [Android NDK](http://developer.android.com/tools/sdk/ndk/index.html)
* [Android Webcam library](https://github.com/openxc/android-webcam)
* [Google Play Services SDK](http://developer.android.com/google/play-services/index.html)
* [Andengine 2D OpenGL Engine](https://github.com/nicolasgramlich/AndEngine)

**Disclaimer** This application is intended to be used with a display device
that has a fixed, preferably permanent location in the vehicle. For example,
mounted on the dash. Never mount anything on the dash such that the driver's
view is impeded. While the night vision camera application may help increase
visibility, the OpenXC platform does not make any claims of a safety benefit.